<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:ProcSim.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:ProcSim.Converters"
    xmlns:vm="clr-namespace:ProcSim.ViewModels"
    Style="{StaticResource MaterialDesignWindow}"
    Background="{DynamicResource MaterialDesignPaper}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    mc:Ignorable="av"
    x:Class="ProcSim.Views.MainView"
    Icon="/Assets/procsim_icon.ico"
    Title="ProcSim"
    Height="750"
    Width="800"
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterScreen"
    Loaded="Window_Loaded">

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!-- Brushes para os cartões das listas -->
        <SolidColorBrush x:Key="ReadyCardBrush" Color="#E8F5E9" />
        <SolidColorBrush x:Key="RunningCardBrush" Color="#E3F2FD" />
        <SolidColorBrush x:Key="BlockedCardBrush" Color="#FFEBEE" />
        <SolidColorBrush x:Key="CompletedCardBrush" Color="#ECEFF1" />

        <Style x:Key="DelayedUpdateSliderStyle" TargetType="Slider" BasedOn="{StaticResource MaterialDesign3.MaterialDesignDiscreteSlider}">
            <EventSetter Event="Thumb.DragCompleted" Handler="Slider_DragCompleted"/>
            <EventSetter Event="MouseLeftButtonUp" Handler="Slider_DragCompleted"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="73*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Margin="10,10,10,10" Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <!-- Menu -->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <!-- Cadastro e Configuração -->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <!-- Listagem de Processos -->
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <materialDesign:PopupBox Grid.Row="0"
                                         PlacementMode="BottomAndAlignRightEdges" 
                                         StaysOpen="False"
                                         VerticalAlignment="Top"
                                         HorizontalAlignment="Right">
                <StackPanel>
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Margin="0,0,10,0" Text="Light" VerticalAlignment="Center" />
                        <ToggleButton x:Name="DarkModeToggleButton" Grid.Column="1" Click="MenuDarkModeButton_Click" />
                        <TextBlock Grid.Column="2" Margin="10,0,0,0" Text="Dark" VerticalAlignment="Center"/>
                    </Grid>
                    <Separator />
                </StackPanel>
            </materialDesign:PopupBox>

            <!-- Configuração e Cadastro de Processos -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <!-- Cadastro de Processos -->
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <!-- Configuração -->
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Cadastro de Processos -->
                <views:ProcessesSettingsView DataContext="{Binding ProcessesSettingsVm}"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <!-- Configuração -->
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="20"/>
                        <!-- Vel Simulação -->
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <!-- Botões-->
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Configuração da Simulação -->
                    <views:VmSettingsView DataContext="{Binding VmSettingsVm}" Grid.Row="0"/>

                    <Slider Grid.Row="2"
                            Minimum="10"
                            Maximum="1000"
                            IsDirectionReversed="True"
                            TickFrequency="10"
                            TickPlacement="TopLeft"
                            Height="30"
                            Value="{Binding CpuTime, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                            Style="{StaticResource DelayedUpdateSliderStyle}"
                            VerticalContentAlignment="Bottom"
                            ToolTip="CPU Time"/>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="4">
                        <Button Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" 
                            Command="{Binding RunPauseSchedulingCommand}"
                            Style="{StaticResource MaterialDesignIconButton}" ToolTip="Iniciar">
                            <materialDesign:PackIcon>
                                <materialDesign:PackIcon.Style>
                                    <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                        <Setter Property="Kind" Value="Play" />
                                        <Setter Property="ToolTip" Value="Iniciar" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                <Setter Property="Kind" Value="Pause" />
                                                <Setter Property="ToolTip" Value="Pausar" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>
                        </Button>
                        <Separator Width="20" Visibility="Hidden"/>
                        <Button Background="{DynamicResource MaterialDesignTextFieldBoxBackground}" 
                            Command="{Binding ResetSchedulingCommand}"
                            Style="{StaticResource MaterialDesignIconButton}" ToolTip="Reiniciar">
                            <materialDesign:PackIcon Kind="Refresh" />
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>

            <!-- Lista de Processos -->
            <Grid Grid.Row="4">
                <GroupBox Header="Fila de Processos" FontSize="12" FontWeight="Bold" Padding="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <views:ProcessListView Header="Ready" ItemsSource="{Binding ReadyProcesses}" 
                                           CardBackground="{StaticResource ReadyCardBrush}" Grid.Column="0"/>
                        <views:ProcessListView Header="Running" ItemsSource="{Binding RunningProcesses}" 
                                           CardBackground="{StaticResource RunningCardBrush}" Grid.Column="1"/>
                        <views:ProcessListView Header="Blocked" ItemsSource="{Binding BlockedProcesses}" 
                                           CardBackground="{StaticResource BlockedCardBrush}" Grid.Column="2"/>
                        <views:ProcessListView Header="Completed" ItemsSource="{Binding CompletedProcesses}" 
                                           CardBackground="{StaticResource CompletedCardBrush}" Grid.Column="3"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>

        <!-- Status Bar -->
        <materialDesign:ColorZone Grid.Row="1" Mode="PrimaryLight" Padding="5" Grid.ColumnSpan="2" VerticalAlignment="Center">
            <StatusBar Background="Transparent"
                       Foreground="White"
                       BorderThickness="0"
                       VerticalAlignment="Center"
                       materialDesign:ColorZoneAssist.Mode="PrimaryDark">
                <StatusBarItem Content="{Binding StatusBarMessage, FallbackValue='Status message'}" />
            </StatusBar>
        </materialDesign:ColorZone>
    </Grid>
</Window>
